:root {
    font-family: 'Jost', sans-serif;
}

button {
    font-family: 'Jost', sans-serif;
    display: flex;
    padding: 0.5rem;
    background-color: transparent;
    border-radius: 10px;
    cursor: pointer;
    background: white;
}

label {
    cursor: pointer;
}

button svg {
    height: 1rem;
    min-width: 1rem;
    width: fit-content;
}

body {
    margin: 0;
    padding: 20px;
    overflow: hidden;
    height: 100vh;
    width: 100vw;
    box-sizing: border-box;

    background-image:
        linear-gradient(
            to right,
            rgba(128, 128, 128, 0.2) 1px,
            transparent 1px
        ),
        linear-gradient(
        to bottom,
        rgba(128, 128, 128, 0.2) 1px,
        transparent 1px
    );
    background-size: 20px 20px;
    background-position: 0 0;
}

#main {
    height: 75%;
    position: relative;
}

#mainExpand {
    position: absolute;
    height: 100%;
    width: 100%;
    padding: 2rem;
    box-sizing: border-box;
    transition: all 0.3s ease;
}

#mainExpand:has(#resize-checkbox:checked) {
    height: calc(100vh - 2rem);
}

#mainExpand > svg {
    background: white;
    display: block;
    width: 100%;
    height: 100%;
    border: black solid 4px;
    border-radius: 15px;
    box-sizing: border-box;
    transition: all 0.3s ease;
}

#resize {
    position: absolute;
    top: 3rem;
    right: 3rem;
    display: inline-block;
    padding: 0.5rem;
    background-color: transparent;
    border-radius: 15px;
    border: 1px solid #ccc;
    cursor: pointer;
    user-select: none;
    transition: background-color 0.3s ease, border-color 0.3s ease;
}

#resize-checkbox:checked + #resize {
    background-color: #e0e0e0;
    border-color: #a0a0a0;
}

.line {
    stroke-width: 5;
    stroke-linecap: round;
    transition: opacity 0.2s ease;
}

.text {
    font-family: 'Jost', sans-serif;
    font-size: 10px;
    transition: opacity 0.2s ease;
}

.value.text {
    fill: blue;
}

.abstraction.text {
    fill: green;
}

.value.line {
    stroke: blue;
}

.abstraction.line {
    stroke: green;
}

.application.line {
    stroke: red;
}

/* Default state - everything visible */
.group .text,
.group .line {
    opacity: 1;
}

/* When any node is hovered, reduce opacity of all nodes */
.group:has(.hover:hover) .text,
.group:has(.hover:hover) .line {
    opacity: 0.25;
}

/* Keep the hovered node and its children at full opacity */
.group:has(> .hover:hover) .text,
.group:has(> .hover:hover) .line {
    opacity: 1;
}

#lambdaTerm {
    margin-top: 0;
    text-align: center;
}

#index {
    min-width: 4rem;
    text-align: center;
}

.buttonList {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 2rem;

    padding-bottom: 1rem;
}
